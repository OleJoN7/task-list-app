{"version":3,"sources":["components/TodoListItem/index.js","components/TodoListItem/TodoListItem.jsx","components/TodoList/index.js","components/TodoList/TodoList.jsx","components/AppHeader/index.js","components/AppHeader/AppHeader.jsx","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.jsx","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.jsx","components/ItemAddForm/index.js","components/ItemAddForm/ItemAddForm.jsx","components/App/App.jsx","components/App/index.js","index.js"],"names":["TodoListItem","props","important","id","label","done","onDone","onDeleted","onMarkImportant","classNames","react_default","a","createElement","className","onClick","type","TodoList","_ref","todos","map","item","itemProps","Object","objectWithoutProperties","key","components_TodoListItem","assign","AppHeader","toDo","SearchPanel","state","onSearchChange","value","placeholder","name","onChange","ItemStatusFilter","onFilterChange","buttons","_ref2","classs","concat","ItemAddForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onLabelChange","e","target","match","setState","trim","onSubmit","preventDefault","onAdded","React","Component","parcticleOptions","particles","number","density","enable","value_area","color","shape","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","App","newId","todoData","toggleProperty","saveItems","filter","setTimeout","console","log","text","newItem","createTodoItem","toConsumableArray","search","arr","propName","items","length","toLowerCase","indexOf","_this$state","visibleItems","filterItems","searchItems","doneCount","todoCount","particles_default","params","components_AppHeader","components_SearchPanel","components_ItemStatusFilter","components_TodoList","components_ItemAddForm","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a1d96276.chunk.js","sourcesContent":["import TodoListItem from './TodoListItem';\n\nexport default TodoListItem;","import React from 'react';\nimport './TodoListItem.css';\n\nconst TodoListItem = (props) => {\n    const {important,id,label,done,onDone,onDeleted,onMarkImportant} = props;\n    let classNames = 'todo-list-item';\n    if(done) {\n        classNames += ' done'\n    }\n    if(important) {\n        classNames += ' important'\n    }\n    return(\n        <span className={classNames}>\n            <span\n                onClick={() => onDone(id)}\n                className=\"todo-list-item-label\"\n                >\n                {label}\n            </span>\n    \n            <button onClick={() => onMarkImportant(id)}\n                    type=\"button\"\n                    className=\"btn btn-outline-success btn-sm float-right\">\n                <i className=\"fa fa-exclamation\" />\n            </button>\n    \n            <button onClick={() => onDeleted(id)} \n                    type=\"button\"\n                    className=\"btn btn-outline-danger btn-sm float-right\">\n                <i className=\"fa fa-trash-o\" />\n            </button>\n      </span>\n    )\n        \n}\n\nexport default TodoListItem;","import TodoList from './TodoList';\n\nexport default TodoList;","import React from 'react';\nimport TodoListItem from '../TodoListItem';\nimport './TodoList.css'\n\nconst TodoList = ({onDone,onMarkImportant,onDeleted,todos}) => {\n    return (\n        <ul className=\"list-group todo-list\">\n            {  \n               todos.map(item => {\n                   const {id,...itemProps} = item;\n                   return(\n                    <li key={id} className=\"list-group-item\">\n                       <TodoListItem \n                            onDeleted={onDeleted} \n                            onMarkImportant={onMarkImportant} \n                            onDone={onDone}  \n                            id={id}\n                            {...itemProps}\n                       />\n                    </li>\n                   )\n               })\n            }\n        </ul>\n    )\n}\n\nexport default TodoList;","import AppHeader from './AppHeader';\n\nexport default AppHeader;","import React from 'react';\nimport './AppHeader.css'\n\nconst AppHeader = ({toDo,done}) => {\n    return (\n    <div className=\"app-header d-flex\">\n       <h1>Task List</h1>\n       <h2>\"{toDo}\" more to do, \"{done}\" done</h2>\n    </div>\n   )\n}\n\nexport default AppHeader;","import SearchPanel from './SearchPanel';\n\nexport default SearchPanel;","import React from 'react';\nimport './SearchPanel.css'\n\nconst SearchPanel = ({state,onSearchChange}) => {\n    return (\n        <input \n            value={state}\n            className=\"form-control search-input\"\n            type='text' \n            placeholder='search' \n            name='search'\n            onChange={onSearchChange}\n        />\n    )\n}\n\nexport default SearchPanel;","import ItemStatusFilter from './ItemStatusFilter';\n\nexport default ItemStatusFilter;","import React from 'react';\nimport './ItemStatusFilter.css';\n\nconst ItemStatusFilter = ({state,onFilterChange}) => {\n  const btns = [\n    {name:'all',label:'All'},\n    {name:'active',label:'Active'},\n    {name:'done',label:'Done'}\n  ]\n  const buttons = btns.map(({name,label}) => {\n    const isActive = state === name;\n    const classs = isActive ? 'btn-info' : 'btn-outline-secondary' \n    return (\n      <button \n        key={name}\n        onClick={() => onFilterChange(name)}\n        type=\"button\"\n        className={`btn ${classs}`}>{label}\n      </button>\n    )\n  })\n  return (\n    <div className=\"btn-group\">\n      {buttons}\n    </div>\n  );\n};\n\nexport default ItemStatusFilter;","import ItemAddForm from './ItemAddForm';\n\nexport default ItemAddForm;","import React from 'react';\nimport './ItemAddForm.css';\n\nclass ItemAddForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            label:''\n        }\n    }\n   \n    onLabelChange = (e) => {\n        const check = /^\\s+/gm;\n        if(e.target.value.match(check)) {\n            this.setState({\n                label:e.target.value.trim()\n             })\n        } else {\n            this.setState({\n                label:e.target.value\n             })\n        }\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        if(this.state.label === '') {\n            return false\n        }\n        this.props.onAdded(this.state.label);\n        this.setState({\n            label: ''\n        })\n    }\n    render() {\n        return (\n            <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\n               <input \n                    type=\"text\" \n                    className=\"form-control\" \n                    onChange={this.onLabelChange}\n                    placeholder=\"New task\"\n                    value={this.state.label}\n                />\n               <button \n                    className=\"btn btn-outline-secondary\" \n                    type=\"submit\">Add\n                </button>\n            </form>\n        )\n    }\n    \n}\n\nexport default ItemAddForm;","import React from 'react';\nimport Particles from 'react-particles-js';\nimport TodoList from '../TodoList';\nimport AppHeader from '../AppHeader';\nimport SearchPanel from '../SearchPanel';\nimport ItemStatusFilter from '../ItemStatusFilter';\nimport ItemAddForm from '../ItemAddForm';\nimport './App.css';\n\nconst parcticleOptions = {\n    particles: {\n        number: {\n          value: 100,\n          density: {\n            enable: false,\n            value_area: 800\n          }\n        },\n        color: {\n          value: '#ffffff'\n        },\n        shape: {\n          type: 'circle',\n          stroke: {\n            width: 0,\n            color: '#7d6262'\n          },\n          polygon: {\n            nb_sides: 5\n          },\n          image: {\n            src: 'img/github.svg',\n            width: 100,\n            height: 100\n          }\n        },\n        opacity: {\n          value: 0.5,\n          random: false,\n          anim: {\n            enable: false,\n            speed: 1,\n            opacity_min: 0.1,\n            sync: false\n          }\n        },\n        size: {\n          value: 5,\n          random: true,\n          anim: {\n            enable: false,\n            speed: 40,\n            size_min: 0.1,\n            sync: false\n          }\n        },\n        line_linked: {\n          enable: true,\n          distance: 150,\n          color: '#ffffff',\n          opacity: 0.4,\n          width: 1\n        },\n        move: {\n          enable: true,\n          speed: 6,\n          direction: 'none',\n          random: false,\n          straight: false,\n          out_mode: 'out',\n          bounce: false,\n          attract: {\n            enable: false,\n            rotateX: 600,\n            rotateY: 1200\n          }\n        }\n      },\n      interactivity: {\n        detect_on: 'canvas',\n        events: {\n          onhover: {\n            enable: true,\n            mode: 'repulse'\n          },\n          onclick: {\n            enable: true,\n            mode: 'push'\n          },\n          resize: true\n        },\n        modes: {\n          grab: {\n            distance: 400,\n            line_linked: {\n              opacity: 1\n            }\n          },\n          bubble: {\n            distance: 400,\n            size: 40,\n            duration: 2,\n            opacity: 8,\n            speed: 3\n          },\n          repulse: {\n            distance: 200,\n            duration: 0.4\n          },\n          push: {\n            particles_nb: 4\n          },\n          remove: {\n            particles_nb: 2\n          }\n        }\n      },\n      retina_detect: true\n}\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            todoData: [\n                this.createTodoItem(\"Drink Coffee\"),\n                this.createTodoItem(\"Watch awesome movie\"),\n                this.createTodoItem(\"Have a lunch\"),\n            ],\n            search:'',\n            filter:'all'\n        }\n    }\n\n    newId = 1;\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done:false,\n            id: this.newId++\n        }\n    }\n    toggleProperty(arr,id,propName) {\n        const newArr = arr.map(item => {\n            if(item.id === id) {\n               item[propName] = !item[propName]\n            } \n            return item\n        })\n        return newArr;\n    }\n    onDone = (id) => {\n        this.setState({\n            todoData:this.toggleProperty(this.state.todoData,id,'done')\n        })\n    }\n    onMarkImportant = (id) => {\n        this.setState({\n            todoData:this.toggleProperty(this.state.todoData,id,'important')\n        })\n    }\n    onDeleted = (id) => {\n    //-------Another way to refresh this.state without changing initial state-----------\n        // this.setState(({todoData}) => {\n        //     const itemId = todoData.findIndex(item => item.id === id);\n        //     return {\n        //         todoData: [...todoData.slice(0,itemId),...todoData.slice(itemId + 1)]\n        //     }})\n    //----------------------------------------------------------------------------------\n        const saveItems = this.state.todoData.filter(item => item.id !== id)\n        this.setState({\n            todoData:saveItems\n        })\n        setTimeout(() => {\n           console.log(this.state) \n        },0)\n    }\n    onAdded = (text) => {\n        let newItem = this.createTodoItem(text);\n        this.setState(({todoData}) => {\n            let addItem = [...todoData,newItem];\n            return {\n                todoData:addItem\n            }\n        })\n    }\n    onSearchChange = (e) => {\n        const check = /^\\s+/gm;\n        if(e.target.value.match(check)) {\n            this.setState({\n                search:e.target.value.trim()\n            })\n        } else {\n            this.setState({\n                search:e.target.value\n            })\n        }\n    }\n    searchItems(items,search) {\n        if(search.length === '') {\n            return items\n        }\n    return items.filter(item => {\n            return item.label.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n        })\n    }\n    onFilterChange = (filter) => {\n        this.setState({filter})\n    }\n    filterItems(items,filter) {\n        switch(filter) {\n            case 'all': \n               return items;\n            case 'active': \n               return items.filter(item => !item.done);\n            case 'done':\n               return items.filter(item => item.done);\n            default:\n               return items   \n        }\n    }\n\n    render() {\n        const { todoData,search,filter} = this.state;\n        const visibleItems = this.filterItems(this.searchItems(todoData,search),filter)\n        const doneCount = todoData.filter(item => item.done === true).length;\n        const todoCount = todoData.length - doneCount;\n        return(\n            <div className=\"app-container d-flex justify-content-center\">\n                <Particles className=\"particles\"\n                    params={parcticleOptions}\n                />\n                <main className=\"todo-app\">\n                    <AppHeader toDo={todoCount} done={doneCount}/>\n                    <div className=\"top-panel d-flex\">\n                    <SearchPanel onSearchChange={this.onSearchChange} state={search} />\n                    <ItemStatusFilter onFilterChange={this.onFilterChange} state={filter}/>\n                    </div>\n                    <TodoList \n                        onMarkImportant={this.onMarkImportant}\n                        onDone={this.onDone} \n                        onDeleted={this.onDeleted}\n                        todos={visibleItems}\n                    />\n                    <ItemAddForm \n                        onLabelChange={this.onLabelChange} \n                        onAdded={this.onAdded}\n                    />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import App from './App';\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}